/**
 * Created by root on 13/07/18.
 */
import React, { Component } from 'react';
import styled from 'styled-components';
import { connect } from "react-redux"
import {auth} from './post'
import setUserAction from './actions/usersActions'
import { Col,Form, FormGroup, Label,FormText } from 'reactstrap';


//–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ styled-components  –ø–æ–∫–∞ –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫-—Ç–æ —Å—Ç—Ä–∞–Ω–Ω–æ –∏ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ
// styled-components –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ –Ω–µ –≤—ã–∑—ã–≤–∞—é—Ç –≤–æ—Å—Ç–æ—Ä–≥–∞.

const AuthForm = styled.div`
width: 100%;
    height: 100%;
    position: fixed;
    top: 0;
    left: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    align-content: center; 
    justify-content: center; 
    overflow: auto;   
`;
/*
–ö–Ω–æ–ø–∫–∞ —Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –≤–∏–¥–∞ —Å —Ä–∞–∫–µ—Ç–æ–π
 */
const Button = styled.button`
  font-size: 1em;
  margin: 1em;
  padding: 0.25em 1em;
  border-radius: 3px;
  ::before {
    content: 'üöÄ';
  }
  :hover {
    color: green;
  }
`;

const Input = styled.input`
 padding: 0.5em;
  margin: 0.5em;
  border-radius: 3px;
`;

//ToDo –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –¥–æ–±–∞–≤–∏—Ç—å middleware
class Auth extends Component
{
constructor(props){
    super(props);
    this.state = {submitOn:true,
        login:'',
        password:''
    };
    this.onLoginChange = this.onLoginChange.bind(this);
    this.onPasswordChange = this.onPasswordChange.bind(this);
    this.findUsers = this.findUsers.bind(this);
}
//ToDo –í–æ–∑–º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ —Ñ–æ—Ä–º—É –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç.
//ToDo –ì–¥–µ-—Ç–æ —Å–¥–µ–ª–∞—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö
// ToDo —Å–¥–µ–ª–∞—Ç—å –ø–æ—Å–∏–º–ø–∞—Ç–∏—á–Ω–µ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
    render() {
        return (
            <AuthForm>
            <div >
            <Input type="text" name="login"
        placeholder="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        onChange={this.onLoginChange}/>
    </div>
        <div >
            <Input type="password"
        name="password"
        placeholder="–ü–∞—Ä–æ–ª—å"
        onChange={this.onPasswordChange}/>
    </div>
            <Button type="submit" className = "btn btn-primary" onClick={this.findUsers}>–í–æ–π—Ç–∏</Button>
            </AuthForm>
    )
    }

    onLoginChange(event){
        this.setState({login: event.target.value});
    }

    onPasswordChange(event){
        this.setState({password: event.target.value});
    }


/*–ù–µ —Å–∞–º–æ–µ —É–¥–∞—á–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≥–µ—Ç –∑–∞–ø—Ä–æ—Å, –Ω–æ —Å post –ø–æ—è–≤–ª—è–µ—Ç—Å—è –æ—à–∏–±–∫–∞
Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at http://127.0.0.1:8081/auth/index.
(Reason: missing token ‚Äòcontent-type‚Äô in CORS header ‚ÄòAccess-Control-Allow-Headers‚Äô from CORS preflight channel).
 –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –æ–¥–Ω–∞ –∏ —Ç–∞ –∂–µ –∑–∞–≥–ª—É—à–∫–∞.
 */

    findUsers = async () => {
    const { login, password } = this.state
try {
   const {name, surname} = await auth(login, password)
 this.props.setUser(name,surname)
  console.log(this.props.user)
} catch (e) {
    console.log('bug')
    console.log(e)
}
}


}
function mapStateToProps(state) {
    return {
        user: state.users.user
    }
}

const mapDispatchToProps = {
    setUser:setUserAction
    }


export default connect(mapStateToProps,mapDispatchToProps)(Auth);